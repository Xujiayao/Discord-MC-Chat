plugins {
    id "fabric-loom" version "${loom_version}"
}

version = mod_version

base {
    archivesName = mod_name + "-fabric"
}

dependencies {
    implementation project(":common")

    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
}

processResources {
    inputs.property "version", version

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 21
    options.encoding = "UTF-8"
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    inputs.property "archivesName", base.archivesName
}

//========== Fabric Mixins ==========

def commonMixins = file("../common/src/main/java/com/xujiayao/discord_mc_chat/common/mixins")
def fabricMixins = file("src/main/java/com/xujiayao/discord_mc_chat/common/mixins")
def fabricCommon = file("src/main/java/com/xujiayao/discord_mc_chat/common")

tasks.compileJava.doFirst {
    if (commonMixins.exists()) {
        ant.copy(todir: fabricMixins) {
            fileset(dir: commonMixins)
        }
    }
}

tasks.compileJava.doLast {
    if (fabricCommon.exists()) {
        ant.delete(dir: fabricCommon)
    }
}

loom {
    mixin {
        defaultRefmapName = "fabric.dmcc.refmap.json"
    }
}
