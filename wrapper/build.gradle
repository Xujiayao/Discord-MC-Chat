import groovy.json.JsonBuilder
import groovy.json.JsonSlurper

apply plugin: "fabric-loom"
apply plugin: "com.gradleup.shadow"

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

version = mod_version
group = maven_group

base {
	archivesName = archives_base_name
}

repositories {
	maven {
		name = "IntelliJ Release"
		url = "https://www.jetbrains.com/intellij-repository/releases"
	}
}

dependencies {
	minecraft("com.mojang:minecraft:${minecraft_version}")
	mappings(loom.officialMojangMappings())

	modImplementation("net.fabricmc:fabric-loader:${loader_version}")
	modApi("net.fabricmc.fabric-api:fabric-api:${fabric_version}")

	include("net.dv8tion:JDA:5.1.0") {
		exclude module: "opus-java"
	}
	include("net.sf.trove4j:core:3.1.0")
	include("org.apache.commons:commons-collections4:4.4")
	shadow(implementation("org.slf4j:slf4j-api:2.0.13")) // 1.x is Incompatible with Quilt (#164)
	shadow(implementation("org.apache.logging.log4j:log4j-slf4j2-impl:2.24.1")) // TODO Any better way?
	include("com.neovisionaries:nv-websocket-client:2.14")
	include("com.fasterxml.jackson.core:jackson-core:2.17.2")
	include("com.fasterxml.jackson.core:jackson-databind:2.17.2")
	include("com.fasterxml.jackson.core:jackson-annotations:2.17.2")
	include("com.squareup.okhttp3:okhttp:4.12.0")
	include("com.squareup.okio:okio-jvm:3.6.0")
	include("org.jetbrains.kotlin:kotlin-stdlib:1.8.21")

	include("net.fellbaum:jemoji:1.3.4") // File size of 1.4.x is too big

	shadow(implementation("com.google.code.gson:gson:2.11.0"))

	shadow(implementation("com.jetbrains.intellij.java:java-gui-forms-rt:242.22855.106"))
	shadow(implementation("com.formdev:flatlaf:3.5.2"))
	shadow(implementation("com.formdev:flatlaf-extras:3.5.2"))
}

def fabric_subprojects = parent.subprojects.findAll({
	it.name != "wrapper"
})

remapJar {
	outputs.upToDateWhen { false }

	inputFile.set shadowJar.archiveFile

	dependsOn {
		shadowJar
		fabric_subprojects.collect {
			it.tasks.remapJar
		}
	}

	doFirst {
		delete fileTree("build/tmp/versions/META-INF/jars")
		copy {
			from {
				fabric_subprojects.collect {
					it.tasks.remapJar.outputs.files
				}
			}
			into("build/tmp/versions/META-INF/jars")
		}
	}

	from("../LICENSE") {
		rename { "${it}_${archives_base_name}" }
	}
	from("build/tmp/versions")

	doLast {
		copy {
			from "build/libs"
			into "../build"
			exclude "*wrapper*"
		}
	}
}

processResources {
	filesMatching("fabric.mod.json") {
		expand "version": mod_version
	}

	doLast {
		ArrayList<?> minecraft_dependency = []
		ArrayList<?> jars = []

		fabric_subprojects.each({
			minecraft_dependency.addAll("${it.minecraft_dependency}".split(","))
			jars.add(["file": "META-INF/jars/Discord-MC-Chat-${it.minecraft_version}-${mod_version}.jar"])
		})

		File file = file("build/resources/main/fabric.mod.json")
		JsonSlurper slurper = new JsonSlurper()
		JsonBuilder builder = new JsonBuilder(slurper.parse(file))
		builder.content.depends.minecraft = minecraft_dependency
		builder.content.jars = jars
		BufferedWriter writer = file.newWriter()
		writer.append(builder.toPrettyString())
		writer.flush()
		writer.close()
	}
}

jar {
	manifest {
		attributes "Main-Class": "com.xujiayao.discord_mc_chat.wrapper.Main"
	}
}

shadowJar {
	archiveClassifier = "wrapper"
	configurations = [project.configurations.shadow]
	// FlatLaf does not support minimization and relocation
}