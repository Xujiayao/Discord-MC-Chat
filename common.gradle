import groovy.json.JsonBuilder
import groovy.json.JsonSlurper

apply plugin: "fabric-loom"
apply plugin: "com.replaymod.preprocess"

int mcVersion = 1

preprocess {
    mcVersion = vars.get().get("MC")
    tabIndentation = true
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

version = mod_version
group = maven_group

base {
    archivesName = "${archives_base_name}-${minecraft_version}"
}

dependencies {
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings(loom.officialMojangMappings())

    modImplementation("net.fabricmc:fabric-loader:${loader_version}")
    modApi("net.fabricmc.fabric-api:fabric-api:${fabric_version}")

    modImplementation("net.dv8tion:JDA:5.0.0-beta.18") {
        exclude module: "opus-java"
    }
    modImplementation("net.sf.trove4j:trove4j:3.0.3")
    modImplementation("org.apache.commons:commons-collections4:4.4")
    modImplementation("org.slf4j:slf4j-api:2.0.9") // 1.x is Incompatible with Quilt (#164)
    modImplementation("com.neovisionaries:nv-websocket-client:2.14")
    modImplementation("com.fasterxml.jackson.core:jackson-core:2.14.1")
    modImplementation("com.fasterxml.jackson.core:jackson-databind:2.14.1")
    modImplementation("com.fasterxml.jackson.core:jackson-annotations:2.14.1")
    modImplementation("com.squareup.okhttp3:okhttp:4.11.0") // Use 4.11.0 instead of 4.10.0 for cleaner logs
    modImplementation("com.squareup.okio:okio:2.10.0") // Cannot use okio-jvm (#55)
    modImplementation("org.jetbrains.kotlin:kotlin-stdlib:1.6.20")

    modImplementation("net.fellbaum:jemoji:1.3.3")

    modImplementation("com.google.code.gson:gson:2.10.1")
}

processResources {
    filesMatching("fabric.mod.json") {
        def valueMap = [
                "mc_version": minecraft_version.replace(".", "_"),
                "version"   : mod_version
        ]
        expand valueMap
    }

    doLast {
        ArrayList<?> minecraft_dependency = minecraft_dependency.split(",")

        File file = file("build/resources/main/fabric.mod.json")
        JsonSlurper slurper = new JsonSlurper()
        JsonBuilder builder = new JsonBuilder(slurper.parse(file))
        builder.content.depends.minecraft = minecraft_dependency
        BufferedWriter writer = file.newWriter()
        writer.append(builder.toPrettyString())
        writer.flush()
        writer.close()
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}